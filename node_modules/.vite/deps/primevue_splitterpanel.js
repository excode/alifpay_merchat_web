import {
  script
} from "./chunk-YW4GNX5G.js";
import {
  createElementBlock,
  mergeProps,
  openBlock,
  renderSlot
} from "./chunk-G4DFXOZZ.js";
import "./chunk-DC6FPUCJ.js";
import "./chunk-7FP5O474.js";

// node_modules/primevue/splitterpanel/splitterpanel.esm.js
var script2 = {
  name: "SplitterPanel",
  extends: script,
  props: {
    size: {
      type: Number,
      default: null
    },
    minSize: {
      type: Number,
      default: null
    }
  },
  computed: {
    containerClass() {
      return ["p-splitter-panel", { "p-splitter-panel-nested": this.isNested }];
    },
    isNested() {
      return this.$slots.default().some((child) => {
        return child.type.name === "Splitter";
      });
    }
  }
};
function render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", mergeProps({
    ref: "container",
    class: $options.containerClass
  }, _ctx.ptm("root")), [
    renderSlot(_ctx.$slots, "default")
  ], 16);
}
script2.render = render;
export {
  script2 as default
};
//# sourceMappingURL=primevue_splitterpanel.js.map
