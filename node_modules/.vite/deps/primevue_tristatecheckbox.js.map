{
  "version": 3,
  "sources": ["../../primevue/tristatecheckbox/tristatecheckbox.esm.js"],
  "sourcesContent": ["import BaseComponent from 'primevue/basecomponent';\nimport CheckIcon from 'primevue/icons/check';\nimport TimesIcon from 'primevue/icons/times';\nimport { openBlock, createElementBlock, mergeProps, createElementVNode, toDisplayString, renderSlot, createBlock, resolveDynamicComponent } from 'vue';\n\nvar script = {\n    name: 'TriStateCheckbox',\n    extends: BaseComponent,\n    emits: ['click', 'update:modelValue', 'change', 'keydown', 'focus', 'blur'],\n    props: {\n        modelValue: null,\n        inputId: {\n            type: String,\n            default: null\n        },\n        inputProps: {\n            type: null,\n            default: null\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        tabindex: {\n            type: Number,\n            default: 0\n        },\n        'aria-labelledby': {\n            type: String,\n            default: null\n        },\n        'aria-label': {\n            type: String,\n            default: null\n        }\n    },\n    data() {\n        return {\n            focused: false\n        };\n    },\n    methods: {\n        getPTOptions(key) {\n            return this.ptm(key, {\n                context: {\n                    active: this.modelValue !== null,\n                    focused: this.focused,\n                    disabled: this.disabled\n                }\n            });\n        },\n        updateModel() {\n            if (!this.disabled) {\n                let newValue;\n\n                switch (this.modelValue) {\n                    case true:\n                        newValue = false;\n                        break;\n\n                    case false:\n                        newValue = null;\n                        break;\n\n                    default:\n                        newValue = true;\n                        break;\n                }\n\n                this.$emit('update:modelValue', newValue);\n            }\n        },\n        onClick(event) {\n            this.updateModel();\n            this.$emit('click', event);\n            this.$emit('change', event);\n            this.$refs.input.focus();\n        },\n        onKeyDown(event) {\n            if (event.code === 'Enter') {\n                this.updateModel();\n                this.$emit('keydown', event);\n                event.preventDefault();\n            }\n        },\n        onFocus(event) {\n            this.focused = true;\n            this.$emit('focus', event);\n        },\n        onBlur(event) {\n            this.focused = false;\n            this.$emit('blur', event);\n        }\n    },\n    computed: {\n        containerClass() {\n            return [\n                'p-checkbox p-component',\n                {\n                    'p-checkbox-checked': this.modelValue === true,\n                    'p-checkbox-disabled': this.disabled,\n                    'p-checkbox-focused': this.focused\n                }\n            ];\n        },\n        ariaValueLabel() {\n            return this.modelValue ? this.$primevue.config.locale.aria.trueLabel : this.modelValue === false ? this.$primevue.config.locale.aria.falseLabel : this.$primevue.config.locale.aria.nullLabel;\n        }\n    },\n    components: {\n        CheckIcon: CheckIcon,\n        TimesIcon: TimesIcon\n    }\n};\n\nconst _hoisted_1 = [\"id\", \"checked\", \"tabindex\", \"disabled\", \"aria-labelledby\", \"aria-label\"];\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (openBlock(), createElementBlock(\"div\", mergeProps({\n    class: $options.containerClass,\n    onClick: _cache[3] || (_cache[3] = $event => ($options.onClick($event)))\n  }, _ctx.ptm('root')), [\n    createElementVNode(\"div\", mergeProps({ class: \"p-hidden-accessible\" }, _ctx.ptm('hiddenInputWrapper')), [\n      createElementVNode(\"input\", mergeProps({\n        ref: \"input\",\n        id: $props.inputId,\n        type: \"checkbox\",\n        checked: $props.modelValue === true,\n        tabindex: $props.tabindex,\n        disabled: $props.disabled,\n        \"aria-labelledby\": _ctx.ariaLabelledby,\n        \"aria-label\": _ctx.ariaLabel,\n        onKeydown: _cache[0] || (_cache[0] = $event => ($options.onKeyDown($event))),\n        onFocus: _cache[1] || (_cache[1] = $event => ($options.onFocus($event))),\n        onBlur: _cache[2] || (_cache[2] = $event => ($options.onBlur($event)))\n      }, { ...$props.inputProps, ..._ctx.ptm('hiddenInput') }), null, 16, _hoisted_1)\n    ], 16),\n    createElementVNode(\"span\", mergeProps({\n      class: \"p-sr-only\",\n      \"aria-live\": \"polite\"\n    }, _ctx.ptm('srOnlyAria')), toDisplayString($options.ariaValueLabel), 17),\n    createElementVNode(\"div\", mergeProps({\n      ref: \"box\",\n      class: ['p-checkbox-box', { 'p-highlight': $props.modelValue != null, 'p-disabled': $props.disabled, 'p-focus': $data.focused }]\n    }, $options.getPTOptions('checbox')), [\n      ($props.modelValue === true)\n        ? renderSlot(_ctx.$slots, \"checkicon\", { key: 0 }, () => [\n            (openBlock(), createBlock(resolveDynamicComponent('CheckIcon'), mergeProps({ class: \"p-checkbox-icon\" }, _ctx.ptm('checkIcon')), null, 16))\n          ])\n        : ($props.modelValue === false)\n          ? renderSlot(_ctx.$slots, \"uncheckicon\", { key: 1 }, () => [\n              (openBlock(), createBlock(resolveDynamicComponent('TimesIcon'), mergeProps({ class: \"p-checkbox-icon\" }, _ctx.ptm('uncheckIcon')), null, 16))\n            ])\n          : renderSlot(_ctx.$slots, \"nullableicon\", { key: 2 }, () => [\n              createElementVNode(\"span\", mergeProps({ class: \"p-checkbox-icon\" }, _ctx.ptm('nullableIcon')), null, 16)\n            ])\n    ], 16)\n  ], 16))\n}\n\nscript.render = render;\n\nexport { script as default };\n"],
  "mappings": "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",
  "names": ["script"]
}
